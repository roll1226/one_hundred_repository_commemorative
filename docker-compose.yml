services:
  user:
    build:
      context: .
      dockerfile: ./docker/user/Dockerfile
    tty: true
    volumes:
      - ./user:/user
      - /user/node_modules
    ports:
      - '3000:3000'

  admin:
    build:
      context: .
      dockerfile: ./docker/admin/Dockerfile
    tty: true
    volumes:
      - ./admin:/admin
      - /admin/node_modules
    ports:
      - '3001:3001'

  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    tty: true
    volumes:
      - type: bind
        source: ./backend
        target: /backend
    ports:
      - '4000:4000'
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: 'Asia/Tokyo'
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data

  graphql-engin:
    image: hasura/graphql-engine:v2.42.0
    restart: always
    ports:
      - '8080:8080'
    depends_on:
      data-connector-agent:
        condition: service_healthy
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB
      HASURA_GRAPHQL_METADATA_DATABASE_URL: $POSTGRES_GRAPHQL_DATABASE_URL
      PG_DATABASE_URL: $POSTGRES_GRAPHQL_DATABASE_URL
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_METADATA_DEFAULTS: ${HASURA_GRAPHQL_METADATA_DEFAULTS}
      HASURA_GRAPHQL_JWT_SECRET: ${HASURA_GRAPHQL_JWT_SECRET}
      NESTJS_REMOTE_SCHEMA: ${HASURA_NESTJS_REMOTE_SCHEMA}
      HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: "true"
      HASURA_GRAPHQL_ENABLE_APOLLO_FEDERATION: "true"
      TZ: Asia/Tokyo
    volumes:
      - ./hasura/migrations:/hasura/migrations
      - ./hasura/metadata:/hasura/metadata
      - ./hasura/seeds:/hasura/seeds

  data-connector-agent:
    image: hasura/graphql-data-connector:v2.42.0
    restart: always
    ports:
      - 8081:8081
    environment:
      QUARKUS_LOG_LEVEL: ERROR # FATAL, ERROR, WARN, INFO, DEBUG, TRACE
      QUARKUS_OPENTELEMETRY_ENABLED: "false"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/v1/athena/health"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s

volumes:
  db_data:
